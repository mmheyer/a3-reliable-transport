# Specify the compiler and flags
CXX = g++
CXXFLAGS = -std=c++17 -Wconversion -Wall -Wextra -pedantic -g

# Executables
SENDER_BASE_EXECUTABLE = wSender-base
RECEIVER_BASE_EXECUTABLE = wReceiver-base
TEST_RECEIVER_BASE_EXECUTABLE = testReceiver-base
SENDER_OPT_EXECUTABLE = wSender-opt
RECEIVER_OPT_EXECUTABLE = wReceiver-opt
TEST_RECEIVER_OPT_EXECUTABLE = testReceiver-opt

# Source files
SENDER_BASE_SOURCES = Sender-base.cpp Logger.cpp Packet-base.cpp Window-base.cpp
RECEIVER_BASE_SOURCES = wReceiver-base.cpp Logger.cpp
TEST_RECEIVER_BASE_SOURCES = testReceiver-base.cpp
SENDER_OPT_SOURCES = Sender-opt.cpp Logger.cpp Packet-opt.cpp Window-opt.cpp
RECEIVER_OPT_SOURCES = wReceiver-opt.cpp Logger.cpp
TEST_RECEIVER_OPT_SOURCES = testReceiver-opt.cpp

# Object files
SENDER_BASE_OBJECTS = $(SENDER_BASE_SOURCES:.cpp=.o)
RECEIVER_BASE_OBJECTS = $(RECEIVER_BASE_SOURCES:.cpp=.o)
TEST_RECEIVER_BASE_OBJECTS = $(TEST_RECEIVER_BASE_SOURCES:.cpp=.o)
SENDER_OPT_OBJECTS = $(SENDER_OPT_SOURCES:.cpp=.o)
RECEIVER_OPT_OBJECTS = $(RECEIVER_OPT_SOURCES:.cpp=.o)
TEST_RECEIVER_OPT_OBJECTS = $(TEST_RECEIVER_OPT_SOURCES:.cpp=.o)

# Default target to build both executables
all: $(SENDER_BASE_EXECUTABLE) $(RECEIVER_BASE_EXECUTABLE) $(TEST_RECEIVER_BASE_EXECUTABLE) $(SENDER_OPT_EXECUTABLE) $(RECEIVER_OPT_EXECUTABLE) $(TEST_RECEIVER_OPT_EXECUTABLE)

# Rule for building wSender-base
$(SENDER_BASE_EXECUTABLE): $(SENDER_BASE_OBJECTS)
	$(CXX) $(CXXFLAGS) $(SENDER_BASE_OBJECTS) -o $(SENDER_BASE_EXECUTABLE)

# Rule for building wSender-opt
$(SENDER_OPT_EXECUTABLE): $(SENDER_OPT_OBJECTS)
	$(CXX) $(CXXFLAGS) $(SENDER_OPT_OBJECTS) -o $(SENDER_OPT_EXECUTABLE)

# Rule for building wReceiver-base
$(RECEIVER_BASE_EXECUTABLE): $(RECEIVER_BASE_OBJECTS)
	$(CXX) $(CXXFLAGS) $(RECEIVER_BASE_OBJECTS) -o $(RECEIVER_BASE_EXECUTABLE)

# Rule for building wReceiver-opt
$(RECEIVER_OPT_EXECUTABLE): $(RECEIVER_OPT_OBJECTS)
	$(CXX) $(CXXFLAGS) $(RECEIVER_OPT_OBJECTS) -o $(RECEIVER_OPT_EXECUTABLE)

# Rule for building testReceiver-base
$(TEST_RECEIVER_BASE_EXECUTABLE): $(TEST_RECEIVER_BASE_OBJECTS)
	$(CXX) $(CXXFLAGS) $(TEST_RECEIVER_BASE_OBJECTS) -o $(TEST_RECEIVER_BASE_EXECUTABLE)

# Rule for building testReceiver-opt
$(TEST_RECEIVER_OPT_EXECUTABLE): $(TEST_RECEIVER_OPT_OBJECTS)
	$(CXX) $(CXXFLAGS) $(TEST_RECEIVER_OPT_OBJECTS) -o $(TEST_RECEIVER_OPT_EXECUTABLE)

# Rule for creating object files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean up build artifacts
clean:
	rm -f $(SENDER_BASE_OBJECTS) $(RECEIVER_BASE_OBJECTS) $(TEST_RECEIVER_BASE_OBJECTS) \
	      $(SENDER_BASE_EXECUTABLE) $(RECEIVER__BASE_EXECUTABLE) $(TEST_RECEIVER_BASE_EXECUTABLE) \
		  $(SENDER_OPT_OBJECTS) $(RECEIVER_OPT_OBJECTS) $(TEST_RECEIVER_OPT_OBJECTS) \
	      $(SENDER_OPT_EXECUTABLE) $(RECEIVER__OPT_EXECUTABLE) $(TEST_RECEIVER_OPT_EXECUTABLE)

# Phony targets
.PHONY: all clean